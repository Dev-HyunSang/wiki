(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{222:function(a,s,t){"use strict";t.r(s);var n=t(0),r=Object(n.a)({},(function(){this._self._c;return this._m(0)}),[function(){var a=this,s=a._self._c;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"_3-일반적인-프로그래밍-개념"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-일반적인-프로그래밍-개념"}},[a._v("#")]),a._v(" 3. 일반적인 프로그래밍 개념")]),a._v(" "),s("ul",[s("li",[a._v("변수, 기본 타입, 함수, 주석, 그리고 제어 흐름에 대해서 배울 예정이다. 이러한 기초는 모든 러스트 프로그램에 사용될 것이며, 이를 일찍 배우면 강력한 기반을 바탕으로 시작할 수 있게 할 것이다.")])]),a._v(" "),s("h2",{attrs:{id:"변수와-가변성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변수와-가변성"}},[a._v("#")]),a._v(" 변수와 가변성")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("변수는 기본적으로 불변(immutable)이다. 러스트가 제공하는 안정성과 쉬운 동시성을 활용하는 방식으로 코드를 작성할 수 있도록 하는 넛지(nudge, 슬며시 선택을 유도하기) 중 하나이다. 변수를 가변(mutable)으로 만들 수 있다. 어떻게 하는지 살펴보고 왜 러스트가 불변성을 권하는지와 어떨 때 가변성을 써야 하는지 알아보자.")])]),a._v(" "),s("li",[s("p",[a._v("변수가 불변일 때, 어떤 이름에 한번 값이 묶이면 그 값은 바꿀 수 다. 이를 표현하기 위해, "),s("code",[a._v("cargo new variables")]),a._v("로 "),s("em",[a._v("projects")]),a._v(" 디렉토리 안에 "),s("code",[a._v("variables")]),a._v("라는 프로젝트를 만들어 보자.")])])]),a._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("println!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"The value of x is: {x}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("println!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"The value of x is: {x}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cargo")]),a._v(" run          \n   Compiling variables v0.1.0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("/Users/park.hyunsang/dev/github/The_Rust_Programming_Language/ch03/variables"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nerror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("E0384"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(": cannot assign twice to immutable variable "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\n --"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" src/main.rs:4:5\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("let")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         -\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         first assignment to "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         help: consider making this binding mutable: "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("mut x"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     println"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"The value of x is: {x}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     ^^^^^ cannot assign twice to immutable variable\n\nFor "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" information about this error, try "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("rustc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--explain")]),a._v(" E0384"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\nerror: could not compile "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("variables"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("bin "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"variables"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" due to previous error\n")])])]),s("ul",[s("li",[a._v("위 코드를 실행하는 경우, 불변성 에러에 관한 에러 메시지를 받게 됩니다.")]),a._v(" "),s("li",[s("code",[a._v("불변 변수")]),a._v("x"),s("code",[a._v("에 두번 값을 할당할 수 없다")]),a._v("라는 내용의 에러 메시지를 받았다. "),s("code",[a._v("불변 변수 x")]),a._v("에 두 번째 값을 할당하려고 했기 때문이다.")]),a._v(" "),s("li",[a._v("불변으로 지정한 값을 변경하려고 하는 바로 이 상황이 버그로 이어질 수 있기 때문에, 컴파일 타임 에러가 발생하는 것은 중요하다. 만약 코드의 한 부분이 변숫값은 변하지 않는다는 전제 하에 작동하고 코드의 다른 부분이 그 값을 바꾼다면, 앞부분의 코드는 원래 지정된 일을 못할 가능성이 생긴다.")]),a._v(" "),s("li",[a._v("이런 류의 버그는 발생 후 추적하는 것이 어렵다. 특히 코드의 두 번재 부분이 값을 가끔씩만 변경하는 경우가 그렇다. 러스트 컴파일러는 값이 바뀌지 않을 것이라고 여러분이 지정하면 실제로 그렇도록 보증한다. 코드를 읽고 쓸 때 값이 어디서 어떻게 바뀔지 추적할 필요가 없다는 것이다. 따라서 여러분의 코드는 흐름을 따라가기 쉬워진다.")]),a._v(" "),s("li",[a._v("가변성은 아주 유용할 수 있고, 코드 작성을 더 편하게 해 준다. 변수는 기본적으로 불변이더라도, 앞써서 했던 것처럼 변수명 앞에 "),s("code",[a._v("mut")]),a._v("을 붙여서 가변으로 만들 수 있다.\n"),s("code",[a._v("mut")]),a._v("를 추가하는 것은 또한 미래에 코드를 읽는 이들에게 코드의 다른 부분에 이 변수의 값이 변하는 것이라는 의도를 전달한다.")])])])}],!1,null,null,null);s.default=r.exports}}]);